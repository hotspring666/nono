{"version":3,"sources":["assets/img/nono.png","serviceWorker.js","assets/fonts/futura.ttf","index.js","common/history.js","Root.js","components/Footer/styles.js","components/Footer/Footer.js","features/home/jss/appTheme.js","features/home/Landing.js","common/routeConfig.js","features/home/App.js","features/home/route.js","common/rootReducer.js","common/store.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","history","createBrowserHistory","renderRouteConfigV3","routes","contextPath","children","renderRoute","item","routeContextPath","newContextPath","test","path","replace","component","childRoutes","push","style","width","props","exact","forEach","r","setConfig","logLevel","ScrollToTop","withRouter","useLocation","pathname","search","useEffect","y","URLSearchParams","get","scrollTo","hot","module","routeConfig","store","styles","theme","root","display","flexDirection","justifyContent","maxWidth","margin","column","title","color","palette","text","primary","fontWeight","fontSize","marginBottom","link","textDecoration","linkIcon","marginRight","minWidth","useStyles","makeStyles","Footer","useTranslation","t","Grid","alignItems","container","marginTop","memo","createAppTheme","isNightMode","createTheme","type","background","default","contrast","paper","secondary","grey","menu","dark","paused","retired","hover","border","main","green","red","minor","sectionBg","farmIcon","vaultIcon","collectorIcon","govIcon","docsIcon","exchangeIcon","bridgeIcon","discordIcon","yearnIcon","idleIcon","dashboardIcon","daiIcon","pickleIcon","harvestIcon","vesperIcon","wbtcIcon","liquityIcon","lusdIcon","newIcon","ethIcon","wethIcon","overrides","MuiTab","backgroundColor","MuiButton","label","MuiButtonBase","MuiCheckbox","colorPrimary","colorSecondary","MuiListItemText","fontFamily","MuiTableCell","MuiTypography","body1","body2","contained","filledWarning","filledError","filledInfo","subTitle","letterSpacing","contact","padding","borderRadius","StylesProvider","injectFirst","ThemeProvider","textAlign","classes","useTheme","className","src","require","height","objectFit","Button","variant","onClick","open","href","target","IconButton","isIndex","handleIndexRoute","route","length","indexRoute","find","child","first","autoIndexRoute","unshift","reducerMap","router","connectRouter","combineReducers","routerMiddleware","middlewares","thunk","devToolsExtension","f","configureStore","initialState","createStore","rootReducer","compose","applyMiddleware"],"mappings":"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","file":"static/js/main.3ee9c26b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/nono.56fe9fb4.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        return registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/futura.5eb75ecc.ttf\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./assets/fonts/futura.ttf\";\nimport \"assets/scss/material-kit-pro-react.scss?v=1.9.0\";\nimport \"./styles/index.scss\";\n\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createBrowserHistory } from 'history';\n\n// A singleton history object for easy API navigation\nconst history = createBrowserHistory();\nexport default history;\n","import React, { useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { Switch, Route, HashRouter, withRouter, useLocation } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { hot, setConfig } from 'react-hot-loader';\nimport store from './common/store';\nimport routeConfig from './common/routeConfig';\nimport { SnackbarProvider } from 'notistack';\nimport history from './common/history';\n// import { initializePriceCache } from './features/web3/fetchPrice'\n\nsetConfig({\n  logLevel: 'debug',\n});\n\nfunction renderRouteConfigV3(routes, contextPath) {\n  // Resolve route config object in React Router v3.\n  const children = []; // children component list\n\n  const renderRoute = (item, routeContextPath) => {\n    let newContextPath;\n    if (/^\\//.test(item.path)) {\n      newContextPath = item.path;\n    } else {\n      newContextPath = `${routeContextPath}/${item.path}`;\n    }\n    newContextPath = newContextPath.replace(/\\/+/g, '/');\n    if (item.component && item.childRoutes) {\n      const childRoutes = renderRouteConfigV3(item.childRoutes, newContextPath);\n      children.push(<Route style={{ width: '80%' }} key={newContextPath} render={props => <item.component {...props}>{childRoutes}</item.component>} path={newContextPath} />);\n    } else if (item.component) {\n      children.push(<Route key={newContextPath} component={item.component} path={newContextPath} exact />);\n    } else if (item.childRoutes) {\n      item.childRoutes.forEach(r => renderRoute(r, newContextPath));\n    }\n  };\n\n  routes.forEach(item => renderRoute(item, contextPath));\n\n  // Use Switch so that only the first matched route is rendered.\n  return <Switch>{children}</Switch>;\n}\n\nfunction _ScrollToTop(props) {\n  const { pathname, search } = useLocation();\n  useEffect(() => {\n    const params = new URLSearchParams(search);\n    const y = params.get('y')\n    if (y) {\n      window.scrollTo(0, y);\n    } else {\n      window.scrollTo(0, 0);\n    }\n\n  }, [pathname]);\n  return props.children\n}\nconst ScrollToTop = withRouter(_ScrollToTop)\n\nfunction Root() {\n  const children = renderRouteConfigV3(routeConfig, '/');\n  // initializePriceCache()\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <HashRouter>\n          <SnackbarProvider>\n            <ScrollToTop>\n              {children}\n            </ScrollToTop>\n          </SnackbarProvider>\n        </HashRouter>\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nexport default hot(module)(Root);\n","const styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    maxWidth: '40rem',\n    margin: '2rem auto',\n    '@media (min-width: 769px)': {\n      margin: '2rem auto 10rem',\n    },\n  },\n  column: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  title: {\n    color: theme.palette.text.primary,\n    fontWeight: 900,\n    fontSize: '1.2rem',\n    marginBottom: '0.5rem',\n  },\n  link: {\n    margin: '0.5rem 0',\n    fontWeight: 400,\n    color: theme.palette.text.primary,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  linkIcon: {\n    marginRight: '0.5rem',\n    minWidth: '24px',\n  },\n});\n\nexport default styles;\n","import React, { memo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport styles from \"./styles\";\n\nconst useStyles = makeStyles(styles);\n\nconst Footer = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Grid\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      container\n      style={{ marginTop: 100 }}\n    >\n      <Grid\n        item\n        style={{ color: \"white\", fontSize: 10, textDecoration: \"underline\" }}\n      >\n        © 2021 nonofleuroro. All rights reserved.\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(Footer);\n","import { createTheme } from \"@material-ui/core/styles\";\n\nconst createAppTheme = (isNightMode) =>\n  createTheme({\n    palette: {\n      type: isNightMode ? \"dark\" : \"light\",\n      background: {\n        default: isNightMode ? \"black\" : \"#fbf9f6\",\n        contrast: isNightMode ? \"#fff\" : \"rgb(33, 36, 41)\",\n        paper: isNightMode ? \"rgb(50, 52, 56)\" : \"#fff\",\n        primary: isNightMode ? \"#E84242\" : \"#1F4F2C\",\n        secondary: isNightMode ? \"rgb(50, 52, 56)\" : \"#97eac9\",\n        grey: \"rgb(50, 52, 56)\",\n        menu: \"rgb(9,11,31)\",\n        dark: isNightMode ? \"rgba(255,255,255,0.3)\" : \"#999\",\n        paused: isNightMode ? \"#2B2A5A\" : \"#FCE57E\",\n        retired: isNightMode ? \"#2C2F36\" : \"#F5F3F3\",\n        hover: isNightMode ? \"#2B2A3D\" : \"#EFE6DC\",\n        border: isNightMode ? \"#2B2A3D\" : \"#DED9D5\",\n      },\n\n      primary: {\n        main: isNightMode ? \"#fff\" : \"#000\",\n      },\n      secondary: {\n        main: isNightMode ? \"rgb(50, 52, 56)\" : \"#F8F2EC\",\n      },\n      text: {\n        primary: isNightMode ? \"#ffffff\" : \"#000\",\n        green: \"#B4FF4F\",\n        red: \"#ff6363\",\n        contrast: isNightMode ? \"#000\" : \"#fff\",\n        secondary: isNightMode ? \"rgba(255, 255, 255, 0.6)\" : \"#5A286E\",\n        minor: \"rgb(70, 200, 100)\",\n      },\n      sectionBg: {\n        primary: isNightMode ? \"gray\" : \"lightgray\",\n      },\n      farmIcon: isNightMode ? \"farm_white.png\" : \"farm_grey.png\",\n      vaultIcon: isNightMode ? \"vault_white.png\" : \"vault_grey.png\",\n      collectorIcon: isNightMode ? \"collector_white.png\" : \"collector_grey.png\",\n      govIcon: isNightMode ? \"gov_white.png\" : \"gov.png\",\n      docsIcon: isNightMode ? \"docs_white.png\" : \"docs.png\",\n      exchangeIcon: isNightMode ? \"swap_white.png\" : \"swap_grey.png\",\n      bridgeIcon: isNightMode ? \"bridge_white.png\" : \"bridge_grey.png\",\n      discordIcon: isNightMode ? \"discord_white.svg\" : \"discord.svg\",\n      yearnIcon: isNightMode ? \"yearn.png\" : \"yearn.png\",\n      idleIcon: isNightMode ? \"idle.png\" : \"idle.png\",\n      dashboardIcon: isNightMode ? \"dashboard_white.png\" : \"dashboard_grey.png\",\n      daiIcon: isNightMode ? \"dai.png\" : \"dai.png\",\n      pickleIcon: isNightMode ? \"pickle.png\" : \"pickle.png\",\n      harvestIcon: isNightMode ? \"harvest.png\" : \"harvest.png\",\n      vesperIcon: isNightMode ? \"vesper.png\" : \"vesper.png\",\n      wbtcIcon: isNightMode ? \"wbtc.png\" : \"wbtc.png\",\n      liquityIcon: isNightMode ? \"liquity.png\" : \"liquity.png\",\n      lusdIcon: isNightMode ? \"lusd.png\" : \"lusd.png\",\n      newIcon: isNightMode ? \"new.png\" : \"new.png\",\n      ethIcon: \"eth.png\",\n      wethIcon: \"eth.png\",\n    },\n    overrides: {\n      MuiTab: {\n        root: {\n          backgroundColor: \"red\",\n          \"&$selected\": {\n            backgroundColor: \"blue\",\n          },\n        },\n      },\n      MuiButton: {\n        label: {\n          color: isNightMode ? \"#000\" : \"#000\",\n        },\n      },\n      // for dropdown menu items\n      MuiButtonBase: {\n        root: {\n          color: isNightMode ? \"#fff\" : \"#000\",\n        },\n      },\n      MuiCheckbox: {\n        colorPrimary: {\n          color: isNightMode ? \"#fff\" : \"#000\",\n        },\n        colorSecondary: {\n          color: isNightMode ? \"#fff\" : \"#000\",\n        },\n      },\n      MuiListItemText: {\n        primary: {\n          fontFamily: \"Futura\",\n        },\n      },\n      MuiTableCell: {\n        root: {\n          fontFamily: \"Futura\",\n        },\n      },\n      MuiTypography: {\n        body1: {\n          fontFamily: \"Futura\",\n        },\n        body2: {\n          fontFamily: \"Futura\",\n        },\n      },\n      MuiTab: {\n        root: {\n          fontFamily: \"Futura\",\n        },\n      },\n      MuiButton: {\n        root: {\n          fontFamily: \"Futura\",\n        },\n        contained: {\n          backgroundColor: \"rgb(33, 36, 41)\",\n          color: \"white\",\n          border: \"white 1px solid\",\n        },\n      },\n      MuiAlert: {\n        filledWarning: {\n          fontFamily: \"Futura\",\n          fontSize: \"1rem\",\n          fontWeight: \"800\",\n        },\n        filledError: {\n          fontFamily: \"Futura\",\n          fontSize: \"1rem\",\n          fontWeight: \"800\",\n        },\n        filledInfo: {\n          fontFamily: \"Futura\",\n          fontSize: \"1rem\",\n          fontWeight: \"800\",\n        },\n      },\n      MuiStepIcon: {\n        root: {\n          color: \"white\",\n        },\n      },\n    },\n  });\n\nexport default createAppTheme;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport { Grid, IconButton, Button, useMediaQuery } from \"@material-ui/core\";\nimport _ from \"lodash\";\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontWeight: 700,\n    fontSize: 21,\n    marginTop: \"20%\",\n    marginBottom: 30,\n    fontFamily: \"Futura\",\n  },\n  subTitle: {\n    fontSize: 12,\n    marginTop: 30,\n    letterSpacing: 1,\n  },\n  contact: {\n    marginTop: 180,\n    \"& .MuiButton-label\": {\n      fontSize: 12,\n      letterSpacing: 1.5,\n    },\n\n    width: 180,\n    padding: \"1px 10px\",\n    border: `1px solid white`,\n    borderRadius: 0,\n    \"&:hover\": {\n      backgroundColor: `white`,\n      \"& .MuiButton-label\": {\n        color: \"black\",\n      },\n    },\n  },\n}));\n\nconst Landing = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <>\n      <div\n        className=\"fadeIn3\"\n        style={{\n          color: \"white\",\n        }}\n      >\n        <div className={classes.title}>\n          <img\n            src={require(\"assets/img/nono.png\").default}\n            style={{ width: 400, height: 100, objectFit: \"contain\" }}\n          />\n        </div>\n        <hr style={{ maxWidth: 500 }} />\n        <div className={classes.subTitle}>\n          THE ABSOLUTE GIFT FOR THE GIRL WHO HAS EVERYTHING\n        </div>\n      </div>\n      <div className=\"fadeIn7\">\n        <Button\n          className={classes.contact}\n          variant=\"outlined\"\n          onClick={() => {\n            window.open(\"mailto:contact@nonofleuroro.com\");\n          }}\n        >\n          Contact\n        </Button>\n      </div>\n      <div className=\"fadeIn7\" style={{ marginTop: 20 }}>\n        <a href=\"https://instagram.com/nonofleuroro\" target=\"_blank\">\n          <IconButton>\n            <InstagramIcon />\n          </IconButton>\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Landing;\n","import { App } from \"../features/home\";\nimport homeRoute from \"../features/home/route\";\n// NOTE: DO NOT CHANGE the 'childRoutes' name and the declaration pattern.\n// This is used for Rekit cmds to register routes config for new features, and remove config when remove features, etc.\nconst childRoutes = [homeRoute];\nconst routes = [\n  {\n    path: \"/\",\n    component: App,\n    childRoutes: childRoutes,\n  },\n];\n\n// Handle isIndex property of route config:\n//  Dupicate it and put it as the first route rule.\nfunction handleIndexRoute(route) {\n  if (!route.childRoutes || !route.childRoutes.length) {\n    return;\n  }\n\n  const indexRoute = route.childRoutes.find((child) => child.isIndex);\n  if (indexRoute) {\n    const first = { ...indexRoute };\n    first.path = \"\";\n    first.exact = true;\n    first.autoIndexRoute = true; // mark it so that the simple nav won't show it.\n    route.childRoutes.unshift(first);\n  }\n  route.childRoutes.forEach(handleIndexRoute);\n}\n\nroutes.forEach(handleIndexRoute);\nexport default routes;\n","import React, { useEffect, useState } from \"react\";\nimport { ThemeProvider, StylesProvider } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Footer from \"components/Footer/Footer\";\nimport { useTranslation } from \"react-i18next\";\nimport createAppTheme from \"./jss/appTheme\";\n\nexport default function App({ children }) {\n  const theme = createAppTheme(true);\n\n  return (\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <div\n          style={{\n            backgroundColor: \"black\",\n            textAlign: \"center\",\n            width: \"100%\",\n            margin: \"0 auto\",\n          }}\n        >\n          <div>{children}</div>\n          <Footer />\n        </div>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n}\n","import { Landing } from \".\";\n\nexport default {\n  path: \"\",\n  childRoutes: [{ path: \"index\", component: Landing, isIndex: true }],\n};\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport history from \"./history\";\n\n// NOTE 1: DO NOT CHANGE the 'reducerMap' name and the declaration pattern.\n// This is used for Rekit cmds to register new features, remove features, etc.\n// NOTE 2: always use the camel case of the feature folder name as the store branch name\n// So that it's easy for others to understand it and Rekit could manage them.\n\nconst reducerMap = {\n  router: connectRouter(history)\n};\n\nexport default combineReducers(reducerMap);\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport history from './history';\nimport rootReducer from './rootReducer';\n\nconst router = routerMiddleware(history);\n\n// NOTE: Do not change middleares delaration pattern since rekit plugins may register middlewares to it.\nconst middlewares = [thunk, router];\n\nlet devToolsExtension = f => f;\n\n/* istanbul ignore if  */\nif (process.env.NODE_ENV === 'development') {\n  if (window.__REDUX_DEVTOOLS_EXTENSION__) {\n    devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__();\n  }\n}\n\nfunction configureStore(initialState) {\n  const store = createStore(rootReducer, initialState, compose(applyMiddleware(...middlewares), devToolsExtension));\n\n  /* istanbul ignore if  */\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./rootReducer', () => {\n      const nextRootReducer = require('./rootReducer').default; // eslint-disable-line\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  return store;\n}\n\nexport default configureStore();\n"],"sourceRoot":""}